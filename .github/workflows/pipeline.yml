name: Android App APK Build

on: push

permissions:
  contents: write
  pull-requests: write

jobs:
  deploy-eas:
    if: github.ref_name == 'main'
    runs-on: ubuntu-latest
    steps:
      - name: Check for EXPO_TOKEN
        run: |
          if [ -z "${{ secrets.EXPO_TOKEN }}" ]; then
            echo "You must provide an EXPO_TOKEN secret linked to this project's Expo account in this repo's secrets. Learn more: https://docs.expo.dev/eas-update/github-actions"
            exit 1
          fi

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: npm

      - name: Setup EAS
        uses: expo/expo-github-action@v8
        with:
          eas-version: latest
          token: ${{ secrets.EXPO_TOKEN }}

      - name: Install dependencies
        run: npm install

      - name: Setup Java 17
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "17"

      - name: Create eas preview
        if: github.ref_name == 'main'
        uses: expo/expo-github-action/preview@v8
        with:
          command: eas update --auto

      - name: Build Android app
        run: eas build --platform android --profile preview --local --output ${{ github.workspace }}/app-release.apk

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-release

  release:
    runs-on: ubuntu-latest
    # needs: [deploy-eas]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get version
        id: get_version
        shell: bash
        run: |
          VERSION="$(jq -r '.expo.version' 'app.json')"
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo $VERSION

      - name: Get app-release
        uses: actions/download-artifact@v4
        with:
          name: app-release

      - name: Unpack app-release
        run: ls -a
        # run: unzip .zip -d destination_folder

      # - name: Create release
      #   id: create_release
      #   uses: actions/create-release@v1
      #   env:
      #     GITHUB_TOKEN: ${{ github.token }}
      #   with:
      #     tag_name: v${{ steps.get_version.outputs.version }}
      #     release_name: v${{ steps.get_version.outputs.version }}
      #     body_path: release/release-notes.txt
      #     draft: false
      #     prerelease: false

      # - name: Upload Release Asset
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url: ${{ steps.create_release.outputs.upload_url }}
      #     asset_path: ./release/release-notes.txt
      #     asset_name: release-notes.txt
      #     asset_content_type:
